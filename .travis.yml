# Travis-CI for Pyslvs-UI
language: python

matrix:
  include:

    - os: linux
      sudo: required
      python: "3.7"
      dist: xenial
      deploy:
        - &appimage-deploy
          provider: releases
          overwrite: true
          api_key: $TRAVIS_TOKEN
          file_glob: true
          file: out/pyslvs-*.AppImage
          skip_cleanup: true
          on:
            tags: true
        - &pypi-deploy
          provider: pypi
          user: $TWINE_USERNAME
          password: $TWINE_PASSWORD
          skip_cleanup: true
          skip_existing: true
          on:
            tags: true

    - os: linux
      sudo: required
      python: "3.8-dev"
      dist: xenial

    - os: osx
      osx_image: xcode10
      language: generic
      env: PYTHON=3.7.0
      deploy:
        - <<: *appimage-deploy
          file: dist/pyslvs-*.app.zip
        - <<: *pypi-deploy

git:
  submodules: false

before_install:

  - git submodule update --init
  - git submodule update --init --recursive depend/pyslvs

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    brew update;
    brew upgrade pyenv;
    export PATH="/Users/travis/.pyenv/shims:${PATH}";
    env PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install ${PYTHON};
    pyenv global ${PYTHON};
    python3 -m pip install pip -U;
    python3 -m pip install pyinstaller;
    pyenv rehash;
    fi

  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    python3 --version;
    python3 -m pip --version;
    pyinstaller --version;
    fi

  - python3 -m pip install -r requirements.txt -U

install:
  - make
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
    cd depend/pyslvs; python3 setup.py install; cd -;
    cd depend/solvespace/cython; python3 setup.py install; cd -;
    fi
  - python3 setup.py install
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then pyenv rehash; fi

script:
  - pyslvs --test

before_cache:
  - rm -rf $HOME/.cache/pip/log

cache:
  directories:
    - $HOME/.cache/pip

after_success:
  - if [[ "$TRAVIS_OS_NAME" == "osx" && -n "$TRAVIS_TAG" ]]; then
    python3 -m pip install twine;
    python3 setup.py sdist bdist_wheel;
    python3 -m twine upload dist/*.whl --skip-existing;
    fi
