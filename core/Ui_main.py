# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/ahshoe/桌面/Pyslvs-PyQt5/core/main.ui'
#
# Created by: PyQt5 UI code generator 5.7.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1050, 697)
        MainWindow.setMinimumSize(QtCore.QSize(1050, 697))
        MainWindow.setMouseTracking(True)
        MainWindow.setAcceptDrops(True)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icons/main_big.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setDockNestingEnabled(True)
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowNestedDocks|QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
        self.centralWidget = QtWidgets.QWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralWidget.sizePolicy().hasHeightForWidth())
        self.centralWidget.setSizePolicy(sizePolicy)
        self.centralWidget.setObjectName("centralWidget")
        self.centralLayout = QtWidgets.QHBoxLayout(self.centralWidget)
        self.centralLayout.setContentsMargins(5, 5, 5, 5)
        self.centralLayout.setSpacing(5)
        self.centralLayout.setObjectName("centralLayout")
        self.toolWidget = QtWidgets.QWidget(self.centralWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.toolWidget.sizePolicy().hasHeightForWidth())
        self.toolWidget.setSizePolicy(sizePolicy)
        self.toolWidget.setMinimumSize(QtCore.QSize(470, 0))
        self.toolWidget.setMaximumSize(QtCore.QSize(450, 16777215))
        self.toolWidget.setObjectName("toolWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.toolWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(1)
        self.verticalLayout.setObjectName("verticalLayout")
        self.pointWidget = QtWidgets.QWidget(self.toolWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pointWidget.sizePolicy().hasHeightForWidth())
        self.pointWidget.setSizePolicy(sizePolicy)
        self.pointWidget.setObjectName("pointWidget")
        self.pointLayout = QtWidgets.QVBoxLayout(self.pointWidget)
        self.pointLayout.setContentsMargins(0, 0, 0, 0)
        self.pointLayout.setSpacing(1)
        self.pointLayout.setObjectName("pointLayout")
        self.PointTab = QtWidgets.QTabWidget(self.pointWidget)
        self.PointTab.setObjectName("PointTab")
        self.Coordinate = QtWidgets.QWidget()
        self.Coordinate.setObjectName("Coordinate")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.Coordinate)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.Entiteis_Point_Widget = QtWidgets.QWidget(self.Coordinate)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Entiteis_Point_Widget.sizePolicy().hasHeightForWidth())
        self.Entiteis_Point_Widget.setSizePolicy(sizePolicy)
        self.Entiteis_Point_Widget.setObjectName("Entiteis_Point_Widget")
        self.Entiteis_Point_Layout = QtWidgets.QVBoxLayout(self.Entiteis_Point_Widget)
        self.Entiteis_Point_Layout.setContentsMargins(6, 6, 6, 6)
        self.Entiteis_Point_Layout.setObjectName("Entiteis_Point_Layout")
        self.Entiteis_Point = QtWidgets.QTableWidget(self.Entiteis_Point_Widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Entiteis_Point.sizePolicy().hasHeightForWidth())
        self.Entiteis_Point.setSizePolicy(sizePolicy)
        self.Entiteis_Point.setMinimumSize(QtCore.QSize(331, 0))
        self.Entiteis_Point.setToolTipDuration(-1)
        self.Entiteis_Point.setAutoFillBackground(True)
        self.Entiteis_Point.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Entiteis_Point.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.Entiteis_Point.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Entiteis_Point.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Entiteis_Point.setRowCount(1)
        self.Entiteis_Point.setColumnCount(5)
        self.Entiteis_Point.setObjectName("Entiteis_Point")
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icons/point.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon1)
        self.Entiteis_Point.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsEnabled)
        self.Entiteis_Point.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.Entiteis_Point.setItem(0, 3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point.setItem(0, 4, item)
        self.Entiteis_Point.horizontalHeader().setDefaultSectionSize(70)
        self.Entiteis_Point.horizontalHeader().setMinimumSectionSize(70)
        self.Entiteis_Point_Layout.addWidget(self.Entiteis_Point)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.point_x_layout = QtWidgets.QVBoxLayout()
        self.point_x_layout.setObjectName("point_x_layout")
        self.label = QtWidgets.QLabel(self.Entiteis_Point_Widget)
        self.label.setTextFormat(QtCore.Qt.RichText)
        self.label.setWordWrap(True)
        self.label.setObjectName("label")
        self.point_x_layout.addWidget(self.label)
        self.X_coordinate = QtWidgets.QLineEdit(self.Entiteis_Point_Widget)
        self.X_coordinate.setObjectName("X_coordinate")
        self.point_x_layout.addWidget(self.X_coordinate)
        self.horizontalLayout.addLayout(self.point_x_layout)
        self.point_y_layout = QtWidgets.QVBoxLayout()
        self.point_y_layout.setObjectName("point_y_layout")
        self.label_2 = QtWidgets.QLabel(self.Entiteis_Point_Widget)
        self.label_2.setTextFormat(QtCore.Qt.RichText)
        self.label_2.setWordWrap(True)
        self.label_2.setObjectName("label_2")
        self.point_y_layout.addWidget(self.label_2)
        self.Y_coordinate = QtWidgets.QLineEdit(self.Entiteis_Point_Widget)
        self.Y_coordinate.setObjectName("Y_coordinate")
        self.point_y_layout.addWidget(self.Y_coordinate)
        self.horizontalLayout.addLayout(self.point_y_layout)
        self.Point_add_button = QtWidgets.QPushButton(self.Entiteis_Point_Widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Point_add_button.sizePolicy().hasHeightForWidth())
        self.Point_add_button.setSizePolicy(sizePolicy)
        self.Point_add_button.setObjectName("Point_add_button")
        self.horizontalLayout.addWidget(self.Point_add_button)
        self.Entiteis_Point_Layout.addLayout(self.horizontalLayout)
        self.verticalLayout_9.addWidget(self.Entiteis_Point_Widget)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icons/perpendicular.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.PointTab.addTab(self.Coordinate, icon2, "")
        self.Style = QtWidgets.QWidget()
        self.Style.setObjectName("Style")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.Style)
        self.verticalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.widget = QtWidgets.QWidget(self.Style)
        self.widget.setObjectName("widget")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_10.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.Entiteis_Point_Style = QtWidgets.QTableWidget(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Entiteis_Point_Style.sizePolicy().hasHeightForWidth())
        self.Entiteis_Point_Style.setSizePolicy(sizePolicy)
        self.Entiteis_Point_Style.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Entiteis_Point_Style.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.Entiteis_Point_Style.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Entiteis_Point_Style.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Entiteis_Point_Style.setColumnCount(4)
        self.Entiteis_Point_Style.setObjectName("Entiteis_Point_Style")
        self.Entiteis_Point_Style.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        item.setIcon(icon1)
        self.Entiteis_Point_Style.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        item.setFlags(QtCore.Qt.ItemIsEnabled)
        self.Entiteis_Point_Style.setItem(0, 0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setItem(0, 1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setItem(0, 2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Point_Style.setItem(0, 3, item)
        self.Entiteis_Point_Style.horizontalHeader().setDefaultSectionSize(95)
        self.Entiteis_Point_Style.horizontalHeader().setMinimumSectionSize(95)
        self.verticalLayout_10.addWidget(self.Entiteis_Point_Style)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_4 = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_3.addWidget(self.label_4)
        self.LineWidth = QtWidgets.QSpinBox(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LineWidth.sizePolicy().hasHeightForWidth())
        self.LineWidth.setSizePolicy(sizePolicy)
        self.LineWidth.setMinimum(1)
        self.LineWidth.setMaximum(10)
        self.LineWidth.setProperty("value", 3)
        self.LineWidth.setDisplayIntegerBase(10)
        self.LineWidth.setObjectName("LineWidth")
        self.horizontalLayout_3.addWidget(self.LineWidth)
        self.label_7 = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout_3.addWidget(self.label_7)
        self.Font_size = QtWidgets.QSpinBox(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Font_size.sizePolicy().hasHeightForWidth())
        self.Font_size.setSizePolicy(sizePolicy)
        self.Font_size.setMinimum(1)
        self.Font_size.setMaximum(30)
        self.Font_size.setSingleStep(5)
        self.Font_size.setProperty("value", 10)
        self.Font_size.setObjectName("Font_size")
        self.horizontalLayout_3.addWidget(self.Font_size)
        self.label_5 = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_5.sizePolicy().hasHeightForWidth())
        self.label_5.setSizePolicy(sizePolicy)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_3.addWidget(self.label_5)
        self.PathWidth = QtWidgets.QSpinBox(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.PathWidth.sizePolicy().hasHeightForWidth())
        self.PathWidth.setSizePolicy(sizePolicy)
        self.PathWidth.setMinimum(1)
        self.PathWidth.setMaximum(5)
        self.PathWidth.setProperty("value", 3)
        self.PathWidth.setObjectName("PathWidth")
        self.horizontalLayout_3.addWidget(self.PathWidth)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem)
        self.verticalLayout_10.addLayout(self.horizontalLayout_3)
        self.verticalLayout_11.addWidget(self.widget)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icons/char-3-radio-true.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.PointTab.addTab(self.Style, icon3, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.Parameter_Widget = QtWidgets.QWidget(self.tab)
        self.Parameter_Widget.setObjectName("Parameter_Widget")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.Parameter_Widget)
        self.verticalLayout_8.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.Parameter_list = QtWidgets.QTableWidget(self.Parameter_Widget)
        self.Parameter_list.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Parameter_list.sizePolicy().hasHeightForWidth())
        self.Parameter_list.setSizePolicy(sizePolicy)
        self.Parameter_list.setAutoFillBackground(True)
        self.Parameter_list.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked)
        self.Parameter_list.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Parameter_list.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Parameter_list.setObjectName("Parameter_list")
        self.Parameter_list.setColumnCount(3)
        self.Parameter_list.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.Parameter_list.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Parameter_list.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Parameter_list.setHorizontalHeaderItem(2, item)
        self.verticalLayout_8.addWidget(self.Parameter_list)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.Parameter_num = QtWidgets.QTextBrowser(self.Parameter_Widget)
        self.Parameter_num.setEnabled(False)
        self.Parameter_num.setMaximumSize(QtCore.QSize(50, 30))
        self.Parameter_num.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Parameter_num.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.Parameter_num.setObjectName("Parameter_num")
        self.horizontalLayout_4.addWidget(self.Parameter_num)
        self.point_x_layout_2 = QtWidgets.QVBoxLayout()
        self.point_x_layout_2.setObjectName("point_x_layout_2")
        self.Parameter_lable = QtWidgets.QLabel(self.Parameter_Widget)
        self.Parameter_lable.setEnabled(False)
        self.Parameter_lable.setTextFormat(QtCore.Qt.RichText)
        self.Parameter_lable.setWordWrap(True)
        self.Parameter_lable.setObjectName("Parameter_lable")
        self.point_x_layout_2.addWidget(self.Parameter_lable)
        self.Parameter_digital = QtWidgets.QLineEdit(self.Parameter_Widget)
        self.Parameter_digital.setEnabled(False)
        self.Parameter_digital.setObjectName("Parameter_digital")
        self.point_x_layout_2.addWidget(self.Parameter_digital)
        self.horizontalLayout_4.addLayout(self.point_x_layout_2)
        self.Parameter_update = QtWidgets.QPushButton(self.Parameter_Widget)
        self.Parameter_update.setEnabled(False)
        self.Parameter_update.setObjectName("Parameter_update")
        self.horizontalLayout_4.addWidget(self.Parameter_update)
        self.Parameter_line = QtWidgets.QFrame(self.Parameter_Widget)
        self.Parameter_line.setEnabled(True)
        self.Parameter_line.setFrameShape(QtWidgets.QFrame.VLine)
        self.Parameter_line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.Parameter_line.setObjectName("Parameter_line")
        self.horizontalLayout_4.addWidget(self.Parameter_line)
        self.Parameter_add = QtWidgets.QPushButton(self.Parameter_Widget)
        self.Parameter_add.setEnabled(True)
        self.Parameter_add.setObjectName("Parameter_add")
        self.horizontalLayout_4.addWidget(self.Parameter_add)
        self.verticalLayout_8.addLayout(self.horizontalLayout_4)
        self.verticalLayout_13.addWidget(self.Parameter_Widget)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icons/text.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.PointTab.addTab(self.tab, icon4, "")
        self.pointLayout.addWidget(self.PointTab)
        self.verticalLayout.addWidget(self.pointWidget)
        self.tabWidget = QtWidgets.QWidget(self.toolWidget)
        self.tabWidget.setObjectName("tabWidget")
        self.tabLayout = QtWidgets.QVBoxLayout(self.tabWidget)
        self.tabLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.tabLayout.setContentsMargins(0, 0, 0, 0)
        self.tabLayout.setSpacing(1)
        self.tabLayout.setObjectName("tabLayout")
        self.Tab = QtWidgets.QTabWidget(self.tabWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Tab.sizePolicy().hasHeightForWidth())
        self.Tab.setSizePolicy(sizePolicy)
        self.Tab.setMinimumSize(QtCore.QSize(0, 287))
        self.Tab.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.Tab.setMovable(False)
        self.Tab.setObjectName("Tab")
        self.Entites = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Entites.sizePolicy().hasHeightForWidth())
        self.Entites.setSizePolicy(sizePolicy)
        self.Entites.setObjectName("Entites")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.Entites)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.Entiteis_Link_Widget = QtWidgets.QWidget(self.Entites)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Entiteis_Link_Widget.sizePolicy().hasHeightForWidth())
        self.Entiteis_Link_Widget.setSizePolicy(sizePolicy)
        self.Entiteis_Link_Widget.setObjectName("Entiteis_Link_Widget")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.Entiteis_Link_Widget)
        self.verticalLayout_12.setContentsMargins(6, 6, 6, 3)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.reqLine = QtWidgets.QLabel(self.Entiteis_Link_Widget)
        self.reqLine.setObjectName("reqLine")
        self.verticalLayout_12.addWidget(self.reqLine)
        self.Entiteis_Link = QtWidgets.QTableWidget(self.Entiteis_Link_Widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Entiteis_Link.sizePolicy().hasHeightForWidth())
        self.Entiteis_Link.setSizePolicy(sizePolicy)
        self.Entiteis_Link.setMaximumSize(QtCore.QSize(16777215, 1000))
        self.Entiteis_Link.setAcceptDrops(False)
        self.Entiteis_Link.setStatusTip("")
        self.Entiteis_Link.setAutoFillBackground(True)
        self.Entiteis_Link.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Entiteis_Link.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.Entiteis_Link.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Entiteis_Link.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Entiteis_Link.setRowCount(0)
        self.Entiteis_Link.setColumnCount(4)
        self.Entiteis_Link.setObjectName("Entiteis_Link")
        item = QtWidgets.QTableWidgetItem()
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icons/line.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon5)
        self.Entiteis_Link.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Link.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Link.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Link.setHorizontalHeaderItem(3, item)
        self.Entiteis_Link.horizontalHeader().setDefaultSectionSize(75)
        self.Entiteis_Link.horizontalHeader().setMinimumSectionSize(75)
        self.verticalLayout_12.addWidget(self.Entiteis_Link)
        self.verticalLayout_2.addWidget(self.Entiteis_Link_Widget)
        self.Entiteis_Stay_Chain_Widget = QtWidgets.QWidget(self.Entites)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Entiteis_Stay_Chain_Widget.sizePolicy().hasHeightForWidth())
        self.Entiteis_Stay_Chain_Widget.setSizePolicy(sizePolicy)
        self.Entiteis_Stay_Chain_Widget.setObjectName("Entiteis_Stay_Chain_Widget")
        self.verticalLayout_15 = QtWidgets.QVBoxLayout(self.Entiteis_Stay_Chain_Widget)
        self.verticalLayout_15.setContentsMargins(6, 3, 6, 6)
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.reqChain = QtWidgets.QLabel(self.Entiteis_Stay_Chain_Widget)
        self.reqChain.setObjectName("reqChain")
        self.verticalLayout_15.addWidget(self.reqChain)
        self.Entiteis_Stay_Chain = QtWidgets.QTableWidget(self.Entiteis_Stay_Chain_Widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Entiteis_Stay_Chain.sizePolicy().hasHeightForWidth())
        self.Entiteis_Stay_Chain.setSizePolicy(sizePolicy)
        self.Entiteis_Stay_Chain.setStatusTip("")
        self.Entiteis_Stay_Chain.setAutoFillBackground(True)
        self.Entiteis_Stay_Chain.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Entiteis_Stay_Chain.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.Entiteis_Stay_Chain.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Entiteis_Stay_Chain.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Entiteis_Stay_Chain.setRowCount(0)
        self.Entiteis_Stay_Chain.setColumnCount(7)
        self.Entiteis_Stay_Chain.setObjectName("Entiteis_Stay_Chain")
        item = QtWidgets.QTableWidgetItem()
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icons/equal.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon6)
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.Entiteis_Stay_Chain.setHorizontalHeaderItem(6, item)
        self.Entiteis_Stay_Chain.horizontalHeader().setDefaultSectionSize(70)
        self.Entiteis_Stay_Chain.horizontalHeader().setMinimumSectionSize(70)
        self.verticalLayout_15.addWidget(self.Entiteis_Stay_Chain)
        self.verticalLayout_2.addWidget(self.Entiteis_Stay_Chain_Widget)
        self.Entiteis_Stay_Chain_Widget.raise_()
        self.Entiteis_Link_Widget.raise_()
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icons/trim.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Tab.addTab(self.Entites, icon7, "")
        self.Simulate = QtWidgets.QWidget()
        self.Simulate.setObjectName("Simulate")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.Simulate)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.SimulateLayout = QtWidgets.QVBoxLayout()
        self.SimulateLayout.setContentsMargins(6, 6, 6, 6)
        self.SimulateLayout.setObjectName("SimulateLayout")
        self.Simulate_tab = QtWidgets.QTabWidget(self.Simulate)
        self.Simulate_tab.setObjectName("Simulate_tab")
        self.Shaft_tab = QtWidgets.QWidget()
        self.Shaft_tab.setObjectName("Shaft_tab")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.Shaft_tab)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.Shaft_Widget = QtWidgets.QWidget(self.Shaft_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Shaft_Widget.sizePolicy().hasHeightForWidth())
        self.Shaft_Widget.setSizePolicy(sizePolicy)
        self.Shaft_Widget.setObjectName("Shaft_Widget")
        self.Drive_Shaft_Layout = QtWidgets.QVBoxLayout(self.Shaft_Widget)
        self.Drive_Shaft_Layout.setContentsMargins(6, 6, 6, 6)
        self.Drive_Shaft_Layout.setObjectName("Drive_Shaft_Layout")
        self.label_6 = QtWidgets.QLabel(self.Shaft_Widget)
        self.label_6.setObjectName("label_6")
        self.Drive_Shaft_Layout.addWidget(self.label_6)
        self.reqShaft = QtWidgets.QLabel(self.Shaft_Widget)
        self.reqShaft.setObjectName("reqShaft")
        self.Drive_Shaft_Layout.addWidget(self.reqShaft)
        self.Shaft = QtWidgets.QTableWidget(self.Shaft_Widget)
        self.Shaft.setStatusTip("")
        self.Shaft.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Shaft.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.Shaft.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Shaft.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Shaft.setObjectName("Shaft")
        self.Shaft.setColumnCount(7)
        self.Shaft.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icons/circle.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon8)
        self.Shaft.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Shaft.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Shaft.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Shaft.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Shaft.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.Shaft.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.Shaft.setHorizontalHeaderItem(6, item)
        self.Shaft.horizontalHeader().setDefaultSectionSize(120)
        self.Shaft.horizontalHeader().setMinimumSectionSize(90)
        self.Drive_Shaft_Layout.addWidget(self.Shaft)
        self.verticalLayout_5.addWidget(self.Shaft_Widget)
        self.Simulate_tab.addTab(self.Shaft_tab, "")
        self.Slider_tab = QtWidgets.QWidget()
        self.Slider_tab.setObjectName("Slider_tab")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.Slider_tab)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.Slider_Widget = QtWidgets.QWidget(self.Slider_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Slider_Widget.sizePolicy().hasHeightForWidth())
        self.Slider_Widget.setSizePolicy(sizePolicy)
        self.Slider_Widget.setObjectName("Slider_Widget")
        self.Slider_Layout = QtWidgets.QVBoxLayout(self.Slider_Widget)
        self.Slider_Layout.setContentsMargins(6, 6, 6, 6)
        self.Slider_Layout.setObjectName("Slider_Layout")
        self.reqSlider = QtWidgets.QLabel(self.Slider_Widget)
        self.reqSlider.setObjectName("reqSlider")
        self.Slider_Layout.addWidget(self.reqSlider)
        self.Slider = QtWidgets.QTableWidget(self.Slider_Widget)
        self.Slider.setStatusTip("")
        self.Slider.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Slider.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.Slider.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Slider.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Slider.setObjectName("Slider")
        self.Slider.setColumnCount(4)
        self.Slider.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/icons/pointonx.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon9)
        self.Slider.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Slider.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Slider.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Slider.setHorizontalHeaderItem(3, item)
        self.Slider.horizontalHeader().setDefaultSectionSize(90)
        self.Slider.horizontalHeader().setMinimumSectionSize(90)
        self.Slider_Layout.addWidget(self.Slider)
        self.verticalLayout_6.addWidget(self.Slider_Widget)
        self.Simulate_tab.addTab(self.Slider_tab, "")
        self.Extendable_rod_tab = QtWidgets.QWidget()
        self.Extendable_rod_tab.setObjectName("Extendable_rod_tab")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.Extendable_rod_tab)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.Rod_Widget = QtWidgets.QWidget(self.Extendable_rod_tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Rod_Widget.sizePolicy().hasHeightForWidth())
        self.Rod_Widget.setSizePolicy(sizePolicy)
        self.Rod_Widget.setObjectName("Rod_Widget")
        self.Rod_Layout = QtWidgets.QVBoxLayout(self.Rod_Widget)
        self.Rod_Layout.setContentsMargins(6, 6, 6, 6)
        self.Rod_Layout.setObjectName("Rod_Layout")
        self.reqRod = QtWidgets.QLabel(self.Rod_Widget)
        self.reqRod.setObjectName("reqRod")
        self.Rod_Layout.addWidget(self.reqRod)
        self.Rod = QtWidgets.QTableWidget(self.Rod_Widget)
        self.Rod.setStatusTip("")
        self.Rod.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.Rod.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.Rod.setVerticalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Rod.setHorizontalScrollMode(QtWidgets.QAbstractItemView.ScrollPerPixel)
        self.Rod.setObjectName("Rod")
        self.Rod.setColumnCount(5)
        self.Rod.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/icons/spring.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        item.setIcon(icon10)
        self.Rod.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.Rod.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.Rod.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.Rod.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.Rod.setHorizontalHeaderItem(4, item)
        self.Rod.horizontalHeader().setDefaultSectionSize(80)
        self.Rod.horizontalHeader().setMinimumSectionSize(70)
        self.Rod_Layout.addWidget(self.Rod)
        self.verticalLayout_7.addWidget(self.Rod_Widget)
        self.Simulate_tab.addTab(self.Extendable_rod_tab, "")
        self.SimulateLayout.addWidget(self.Simulate_tab)
        self.verticalLayout_3.addLayout(self.SimulateLayout)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/icons/arc.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Tab.addTab(self.Simulate, icon11, "")
        self.History = QtWidgets.QWidget()
        self.History.setObjectName("History")
        self.verticalLayout_17 = QtWidgets.QVBoxLayout(self.History)
        self.verticalLayout_17.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_17.setObjectName("verticalLayout_17")
        self.HistoryLayout = QtWidgets.QVBoxLayout()
        self.HistoryLayout.setContentsMargins(6, 6, 6, 6)
        self.HistoryLayout.setObjectName("HistoryLayout")
        self.label_8 = QtWidgets.QLabel(self.History)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_8.sizePolicy().hasHeightForWidth())
        self.label_8.setSizePolicy(sizePolicy)
        self.label_8.setObjectName("label_8")
        self.HistoryLayout.addWidget(self.label_8)
        self.verticalLayout_17.addLayout(self.HistoryLayout)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/icons/step-translate.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Tab.addTab(self.History, icon12, "")
        self.Panels = QtWidgets.QWidget()
        self.Panels.setObjectName("Panels")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.Panels)
        self.verticalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.widget_2 = QtWidgets.QWidget(self.Panels)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_2.sizePolicy().hasHeightForWidth())
        self.widget_2.setSizePolicy(sizePolicy)
        self.widget_2.setObjectName("widget_2")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_2)
        self.verticalLayout_4.setContentsMargins(6, 6, 6, 6)
        self.verticalLayout_4.setSpacing(5)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.reqPath = QtWidgets.QLabel(self.widget_2)
        self.reqPath.setObjectName("reqPath")
        self.verticalLayout_4.addWidget(self.reqPath)
        self.Path_Track_Functions = QtWidgets.QGridLayout()
        self.Path_Track_Functions.setObjectName("Path_Track_Functions")
        self.Path_data_show = QtWidgets.QCheckBox(self.widget_2)
        self.Path_data_show.setEnabled(False)
        self.Path_data_show.setChecked(True)
        self.Path_data_show.setObjectName("Path_data_show")
        self.Path_Track_Functions.addWidget(self.Path_data_show, 3, 2, 1, 1)
        self.Path_Clear = QtWidgets.QPushButton(self.widget_2)
        self.Path_Clear.setEnabled(False)
        self.Path_Clear.setObjectName("Path_Clear")
        self.Path_Track_Functions.addWidget(self.Path_Clear, 1, 2, 1, 1)
        self.Path_coordinate = QtWidgets.QPushButton(self.widget_2)
        self.Path_coordinate.setEnabled(False)
        self.Path_coordinate.setObjectName("Path_coordinate")
        self.Path_Track_Functions.addWidget(self.Path_coordinate, 2, 2, 1, 1)
        self.Path_data_exist = QtWidgets.QLabel(self.widget_2)
        self.Path_data_exist.setTextFormat(QtCore.Qt.RichText)
        self.Path_data_exist.setWordWrap(True)
        self.Path_data_exist.setObjectName("Path_data_exist")
        self.Path_Track_Functions.addWidget(self.Path_data_exist, 2, 1, 1, 1)
        self.PathTrack = QtWidgets.QPushButton(self.widget_2)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/icons/bezier.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.PathTrack.setIcon(icon13)
        self.PathTrack.setObjectName("PathTrack")
        self.Path_Track_Functions.addWidget(self.PathTrack, 1, 1, 1, 1)
        self.verticalLayout_4.addLayout(self.Path_Track_Functions)
        self.line = QtWidgets.QFrame(self.widget_2)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_4.addWidget(self.line)
        self.reqPathSolving = QtWidgets.QLabel(self.widget_2)
        self.reqPathSolving.setObjectName("reqPathSolving")
        self.verticalLayout_4.addWidget(self.reqPathSolving)
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.PathSolving = QtWidgets.QPushButton(self.widget_2)
        self.PathSolving.setEnabled(True)
        self.PathSolving.setIcon(icon13)
        self.PathSolving.setCheckable(True)
        self.PathSolving.setObjectName("PathSolving")
        self.gridLayout_3.addWidget(self.PathSolving, 1, 0, 1, 1)
        self.Path_points_show = QtWidgets.QCheckBox(self.widget_2)
        self.Path_points_show.setToolTip("")
        self.Path_points_show.setChecked(False)
        self.Path_points_show.setObjectName("Path_points_show")
        self.gridLayout_3.addWidget(self.Path_points_show, 1, 1, 1, 1)
        self.verticalLayout_4.addLayout(self.gridLayout_3)
        self.line_4 = QtWidgets.QFrame(self.widget_2)
        self.line_4.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.verticalLayout_4.addWidget(self.line_4)
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.Drive_shaft = QtWidgets.QPushButton(self.widget_2)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/icons/same-orientation.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Drive_shaft.setIcon(icon14)
        self.Drive_shaft.setCheckable(True)
        self.Drive_shaft.setObjectName("Drive_shaft")
        self.gridLayout.addWidget(self.Drive_shaft, 0, 0, 1, 1)
        self.Drive_rod = QtWidgets.QPushButton(self.widget_2)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/icons/normal.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Drive_rod.setIcon(icon15)
        self.Drive_rod.setObjectName("Drive_rod")
        self.gridLayout.addWidget(self.Drive_rod, 0, 1, 1, 1)
        self.verticalLayout_4.addLayout(self.gridLayout)
        self.line_5 = QtWidgets.QFrame(self.widget_2)
        self.line_5.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.verticalLayout_4.addWidget(self.line_5)
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.AuxLine = QtWidgets.QPushButton(self.widget_2)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/icons/auxline.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.AuxLine.setIcon(icon16)
        self.AuxLine.setCheckable(True)
        self.AuxLine.setObjectName("AuxLine")
        self.gridLayout_2.addWidget(self.AuxLine, 0, 0, 1, 1)
        self.Measurement = QtWidgets.QPushButton(self.widget_2)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/icons/ref.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Measurement.setIcon(icon17)
        self.Measurement.setCheckable(True)
        self.Measurement.setObjectName("Measurement")
        self.gridLayout_2.addWidget(self.Measurement, 0, 1, 1, 1)
        self.verticalLayout_4.addLayout(self.gridLayout_2)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_4.addItem(spacerItem1)
        self.verticalLayout_14.addWidget(self.widget_2)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/icons/main.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.Tab.addTab(self.Panels, icon18, "")
        self.tabLayout.addWidget(self.Tab)
        self.verticalLayout.addWidget(self.tabWidget)
        self.centralLayout.addWidget(self.toolWidget)
        self.mplLayout = QtWidgets.QVBoxLayout()
        self.mplLayout.setContentsMargins(0, 6, 6, 6)
        self.mplLayout.setObjectName("mplLayout")
        self.zoombarLayout = QtWidgets.QHBoxLayout()
        self.zoombarLayout.setObjectName("zoombarLayout")
        self.label_3 = QtWidgets.QLabel(self.centralWidget)
        self.label_3.setObjectName("label_3")
        self.zoombarLayout.addWidget(self.label_3)
        self.ZoomBar = QtWidgets.QSlider(self.centralWidget)
        self.ZoomBar.setMinimum(25)
        self.ZoomBar.setMaximum(800)
        self.ZoomBar.setSingleStep(50)
        self.ZoomBar.setPageStep(50)
        self.ZoomBar.setProperty("value", 200)
        self.ZoomBar.setSliderPosition(200)
        self.ZoomBar.setOrientation(QtCore.Qt.Horizontal)
        self.ZoomBar.setInvertedControls(False)
        self.ZoomBar.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.ZoomBar.setTickInterval(100)
        self.ZoomBar.setObjectName("ZoomBar")
        self.zoombarLayout.addWidget(self.ZoomBar)
        self.ZoomText = QtWidgets.QLabel(self.centralWidget)
        self.ZoomText.setObjectName("ZoomText")
        self.zoombarLayout.addWidget(self.ZoomText)
        self.line_2 = QtWidgets.QFrame(self.centralWidget)
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.zoombarLayout.addWidget(self.line_2)
        self.ResetCanvas = QtWidgets.QPushButton(self.centralWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ResetCanvas.sizePolicy().hasHeightForWidth())
        self.ResetCanvas.setSizePolicy(sizePolicy)
        self.ResetCanvas.setMaximumSize(QtCore.QSize(50, 16777215))
        self.ResetCanvas.setObjectName("ResetCanvas")
        self.zoombarLayout.addWidget(self.ResetCanvas)
        self.FitW = QtWidgets.QPushButton(self.centralWidget)
        self.FitW.setMaximumSize(QtCore.QSize(50, 16777215))
        self.FitW.setObjectName("FitW")
        self.zoombarLayout.addWidget(self.FitW)
        self.FitH = QtWidgets.QPushButton(self.centralWidget)
        self.FitH.setMaximumSize(QtCore.QSize(50, 16777215))
        self.FitH.setObjectName("FitH")
        self.zoombarLayout.addWidget(self.FitH)
        self.line_3 = QtWidgets.QFrame(self.centralWidget)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.zoombarLayout.addWidget(self.line_3)
        self.DOFLable = QtWidgets.QLabel(self.centralWidget)
        self.DOFLable.setObjectName("DOFLable")
        self.zoombarLayout.addWidget(self.DOFLable)
        self.DOFview = QtWidgets.QLabel(self.centralWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.DOFview.sizePolicy().hasHeightForWidth())
        self.DOFview.setSizePolicy(sizePolicy)
        self.DOFview.setText("")
        self.DOFview.setObjectName("DOFview")
        self.zoombarLayout.addWidget(self.DOFview)
        self.mplLayout.addLayout(self.zoombarLayout)
        self.centralLayout.addLayout(self.mplLayout)
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1050, 23))
        self.menuBar.setDefaultUp(False)
        self.menuBar.setNativeMenuBar(True)
        self.menuBar.setObjectName("menuBar")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setStatusTip("")
        self.menuFile.setObjectName("menuFile")
        self.menuExample = QtWidgets.QMenu(self.menuFile)
        self.menuExample.setObjectName("menuExample")
        self.menuExport = QtWidgets.QMenu(self.menuFile)
        self.menuExport.setObjectName("menuExport")
        self.menu_Draw = QtWidgets.QMenu(self.menuBar)
        self.menu_Draw.setObjectName("menu_Draw")
        self.menu_Options = QtWidgets.QMenu(self.menuBar)
        self.menu_Options.setObjectName("menu_Options")
        self.menu_Help = QtWidgets.QMenu(self.menuBar)
        self.menu_Help.setObjectName("menu_Help")
        self.menu_Simulation = QtWidgets.QMenu(self.menuBar)
        self.menu_Simulation.setObjectName("menu_Simulation")
        self.menu_Edit = QtWidgets.QMenu(self.menuBar)
        self.menu_Edit.setObjectName("menu_Edit")
        MainWindow.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(MainWindow)
        self.statusBar.setObjectName("statusBar")
        MainWindow.setStatusBar(self.statusBar)
        self.action_New_Workbook = QtWidgets.QAction(MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/icons/CSV.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_New_Workbook.setIcon(icon19)
        self.action_New_Workbook.setShortcutContext(QtCore.Qt.WindowShortcut)
        self.action_New_Workbook.setObjectName("action_New_Workbook")
        self.action_Load_Workbook = QtWidgets.QAction(MainWindow)
        self.action_Load_Workbook.setIcon(icon19)
        self.action_Load_Workbook.setObjectName("action_Load_Workbook")
        self.action_New_Point = QtWidgets.QAction(MainWindow)
        self.action_New_Point.setIcon(icon1)
        self.action_New_Point.setObjectName("action_New_Point")
        self.action_New_Line = QtWidgets.QAction(MainWindow)
        self.action_New_Line.setEnabled(True)
        self.action_New_Line.setIcon(icon5)
        self.action_New_Line.setObjectName("action_New_Line")
        self.action_Output_to_Script = QtWidgets.QAction(MainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/icons/edges.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Output_to_Script.setIcon(icon20)
        self.action_Output_to_Script.setObjectName("action_Output_to_Script")
        self.actionE_xit = QtWidgets.QAction(MainWindow)
        self.actionE_xit.setCheckable(False)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/icons/exit.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionE_xit.setIcon(icon21)
        self.actionE_xit.setObjectName("actionE_xit")
        self.action_Get_Help = QtWidgets.QAction(MainWindow)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/icons/kmol.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Get_Help.setIcon(icon22)
        self.action_Get_Help.setObjectName("action_Get_Help")
        self.action_Prefenece = QtWidgets.QAction(MainWindow)
        self.action_Prefenece.setEnabled(False)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/icons/shaded.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Prefenece.setIcon(icon23)
        self.action_Prefenece.setObjectName("action_Prefenece")
        self.actionGit_hub_Site = QtWidgets.QAction(MainWindow)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/icons/github-24.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionGit_hub_Site.setIcon(icon24)
        self.actionGit_hub_Site.setObjectName("actionGit_hub_Site")
        self.action_About_Pyslvs = QtWidgets.QAction(MainWindow)
        self.action_About_Pyslvs.setIcon(icon18)
        self.action_About_Pyslvs.setObjectName("action_About_Pyslvs")
        self.action_Set_Shaft = QtWidgets.QAction(MainWindow)
        self.action_Set_Shaft.setEnabled(True)
        self.action_Set_Shaft.setIcon(icon8)
        self.action_Set_Shaft.setObjectName("action_Set_Shaft")
        self.actionGithub_Wiki = QtWidgets.QAction(MainWindow)
        self.actionGithub_Wiki.setIcon(icon24)
        self.actionGithub_Wiki.setObjectName("actionGithub_Wiki")
        self.actionMi_nimized = QtWidgets.QAction(MainWindow)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/icons/minmized.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMi_nimized.setIcon(icon25)
        self.actionMi_nimized.setObjectName("actionMi_nimized")
        self.actionM_axmized = QtWidgets.QAction(MainWindow)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/icons/maxmized.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionM_axmized.setIcon(icon26)
        self.actionM_axmized.setObjectName("actionM_axmized")
        self.action_Full_Screen = QtWidgets.QAction(MainWindow)
        self.action_Full_Screen.setCheckable(False)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/icons/fullscreen.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Full_Screen.setIcon(icon27)
        self.action_Full_Screen.setObjectName("action_Full_Screen")
        self.actionNormalmized = QtWidgets.QAction(MainWindow)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/icons/normalsized.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNormalmized.setIcon(icon28)
        self.actionNormalmized.setObjectName("actionNormalmized")
        self.action_Output_to_Picture = QtWidgets.QAction(MainWindow)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/icons/faces.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Output_to_Picture.setIcon(icon29)
        self.action_Output_to_Picture.setObjectName("action_Output_to_Picture")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setIcon(icon19)
        self.actionSave.setObjectName("actionSave")
        self.action_New_Stay_Chain = QtWidgets.QAction(MainWindow)
        self.action_New_Stay_Chain.setEnabled(True)
        self.action_New_Stay_Chain.setIcon(icon6)
        self.action_New_Stay_Chain.setObjectName("action_New_Stay_Chain")
        self.action_See_Python_Scripts = QtWidgets.QAction(MainWindow)
        self.action_See_Python_Scripts.setIcon(icon20)
        self.action_See_Python_Scripts.setObjectName("action_See_Python_Scripts")
        self.action_About_Python_Solvspace = QtWidgets.QAction(MainWindow)
        self.action_About_Python_Solvspace.setIcon(icon18)
        self.action_About_Python_Solvspace.setObjectName("action_About_Python_Solvspace")
        self.actionDelete_Point = QtWidgets.QAction(MainWindow)
        self.actionDelete_Point.setEnabled(True)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/icons/delete.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Point.setIcon(icon30)
        self.actionDelete_Point.setObjectName("actionDelete_Point")
        self.actionDelete_Linkage = QtWidgets.QAction(MainWindow)
        self.actionDelete_Linkage.setEnabled(True)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/icons/deleteline.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Linkage.setIcon(icon31)
        self.actionDelete_Linkage.setObjectName("actionDelete_Linkage")
        self.actionDelete_Stay_Chain = QtWidgets.QAction(MainWindow)
        self.actionDelete_Stay_Chain.setEnabled(True)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/icons/deletechain.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Stay_Chain.setIcon(icon32)
        self.actionDelete_Stay_Chain.setObjectName("actionDelete_Stay_Chain")
        self.actionEdit_Point = QtWidgets.QAction(MainWindow)
        self.actionEdit_Point.setEnabled(True)
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/icons/editpoint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEdit_Point.setIcon(icon33)
        self.actionEdit_Point.setObjectName("actionEdit_Point")
        self.actionEdit_Linkage = QtWidgets.QAction(MainWindow)
        self.actionEdit_Linkage.setEnabled(True)
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/icons/length.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEdit_Linkage.setIcon(icon34)
        self.actionEdit_Linkage.setObjectName("actionEdit_Linkage")
        self.actionEdit_Stay_Chain = QtWidgets.QAction(MainWindow)
        self.actionEdit_Stay_Chain.setEnabled(True)
        icon35 = QtGui.QIcon()
        icon35.addPixmap(QtGui.QPixmap(":/icons/editchain.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionEdit_Stay_Chain.setIcon(icon35)
        self.actionEdit_Stay_Chain.setObjectName("actionEdit_Stay_Chain")
        self.actionHow_to_use = QtWidgets.QAction(MainWindow)
        icon36 = QtGui.QIcon()
        icon36.addPixmap(QtGui.QPixmap(":/icons/assemble.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHow_to_use.setIcon(icon36)
        self.actionHow_to_use.setObjectName("actionHow_to_use")
        self.action_Set_Slider = QtWidgets.QAction(MainWindow)
        self.action_Set_Slider.setEnabled(True)
        self.action_Set_Slider.setIcon(icon9)
        self.action_Set_Slider.setObjectName("action_Set_Slider")
        self.action_Edit_Shaft = QtWidgets.QAction(MainWindow)
        self.action_Edit_Shaft.setEnabled(True)
        icon37 = QtGui.QIcon()
        icon37.addPixmap(QtGui.QPixmap(":/icons/editshaft.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Edit_Shaft.setIcon(icon37)
        self.action_Edit_Shaft.setObjectName("action_Edit_Shaft")
        self.action_Edit_Slider = QtWidgets.QAction(MainWindow)
        self.action_Edit_Slider.setEnabled(True)
        icon38 = QtGui.QIcon()
        icon38.addPixmap(QtGui.QPixmap(":/icons/editslider.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Edit_Slider.setIcon(icon38)
        self.action_Edit_Slider.setObjectName("action_Edit_Slider")
        self.actionDelete_Shaft = QtWidgets.QAction(MainWindow)
        self.actionDelete_Shaft.setEnabled(True)
        icon39 = QtGui.QIcon()
        icon39.addPixmap(QtGui.QPixmap(":/icons/deleteshaft.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Shaft.setIcon(icon39)
        self.actionDelete_Shaft.setObjectName("actionDelete_Shaft")
        self.actionDelete_Slider = QtWidgets.QAction(MainWindow)
        self.actionDelete_Slider.setEnabled(True)
        icon40 = QtGui.QIcon()
        icon40.addPixmap(QtGui.QPixmap(":/icons/deleteslider.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Slider.setIcon(icon40)
        self.actionDelete_Slider.setObjectName("actionDelete_Slider")
        self.action_Output_to_S_QLite_Data_Base = QtWidgets.QAction(MainWindow)
        self.action_Output_to_S_QLite_Data_Base.setEnabled(False)
        icon41 = QtGui.QIcon()
        icon41.addPixmap(QtGui.QPixmap(":/icons/SQL_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Output_to_S_QLite_Data_Base.setIcon(icon41)
        self.action_Output_to_S_QLite_Data_Base.setObjectName("action_Output_to_S_QLite_Data_Base")
        self.action_Set_Rod = QtWidgets.QAction(MainWindow)
        self.action_Set_Rod.setEnabled(True)
        self.action_Set_Rod.setIcon(icon10)
        self.action_Set_Rod.setObjectName("action_Set_Rod")
        self.action_Edit_Rod = QtWidgets.QAction(MainWindow)
        self.action_Edit_Rod.setEnabled(True)
        icon42 = QtGui.QIcon()
        icon42.addPixmap(QtGui.QPixmap(":/icons/editrod.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Edit_Rod.setIcon(icon42)
        self.action_Edit_Rod.setObjectName("action_Edit_Rod")
        self.actionDelete_Piston_Spring = QtWidgets.QAction(MainWindow)
        self.actionDelete_Piston_Spring.setEnabled(True)
        icon43 = QtGui.QIcon()
        icon43.addPixmap(QtGui.QPixmap(":/icons/deleterod.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDelete_Piston_Spring.setIcon(icon43)
        self.actionDelete_Piston_Spring.setObjectName("actionDelete_Piston_Spring")
        self.actionDisplay_Dimensions = QtWidgets.QAction(MainWindow)
        self.actionDisplay_Dimensions.setCheckable(True)
        icon44 = QtGui.QIcon()
        icon44.addPixmap(QtGui.QPixmap(":/icons/constraint.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDisplay_Dimensions.setIcon(icon44)
        self.actionDisplay_Dimensions.setObjectName("actionDisplay_Dimensions")
        self.action_Black_Blackground = QtWidgets.QAction(MainWindow)
        self.action_Black_Blackground.setCheckable(True)
        icon45 = QtGui.QIcon()
        icon45.addPixmap(QtGui.QPixmap(":/icons/workplane.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Black_Blackground.setIcon(icon45)
        self.action_Black_Blackground.setObjectName("action_Black_Blackground")
        self.actionDisplay_Point_Mark = QtWidgets.QAction(MainWindow)
        self.actionDisplay_Point_Mark.setCheckable(True)
        self.actionDisplay_Point_Mark.setChecked(True)
        icon46 = QtGui.QIcon()
        icon46.addPixmap(QtGui.QPixmap(":/icons/char-2-radio-false.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDisplay_Point_Mark.setIcon(icon46)
        self.actionDisplay_Point_Mark.setObjectName("actionDisplay_Point_Mark")
        self.action_Output_to_Solvespace = QtWidgets.QAction(MainWindow)
        self.action_Output_to_Solvespace.setEnabled(False)
        icon47 = QtGui.QIcon()
        icon47.addPixmap(QtGui.QPixmap(":/icons/Solvespace.ico"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_Output_to_Solvespace.setIcon(icon47)
        self.action_Output_to_Solvespace.setObjectName("action_Output_to_Solvespace")
        self.actionOutput_to_DXF = QtWidgets.QAction(MainWindow)
        icon48 = QtGui.QIcon()
        icon48.addPixmap(QtGui.QPixmap(":/icons/dxf.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOutput_to_DXF.setIcon(icon48)
        self.actionOutput_to_DXF.setObjectName("actionOutput_to_DXF")
        self.action_Property = QtWidgets.QAction(MainWindow)
        self.action_Property.setIcon(icon19)
        self.action_Property.setObjectName("action_Property")
        self.actionCrank_rocker = QtWidgets.QAction(MainWindow)
        self.actionCrank_rocker.setObjectName("actionCrank_rocker")
        self.actionMutiple_Link = QtWidgets.QAction(MainWindow)
        self.actionMutiple_Link.setObjectName("actionMutiple_Link")
        self.actionSave_as = QtWidgets.QAction(MainWindow)
        self.actionSave_as.setIcon(icon19)
        self.actionSave_as.setObjectName("actionSave_as")
        self.actionUndo = QtWidgets.QAction(MainWindow)
        self.actionUndo.setEnabled(False)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(MainWindow)
        self.actionRedo.setEnabled(False)
        self.actionRedo.setObjectName("actionRedo")
        self.actionSearch_Points = QtWidgets.QAction(MainWindow)
        self.actionSearch_Points.setEnabled(True)
        self.actionSearch_Points.setObjectName("actionSearch_Points")
        self.actionTwo_Mutiple_Link = QtWidgets.QAction(MainWindow)
        self.actionTwo_Mutiple_Link.setObjectName("actionTwo_Mutiple_Link")
        self.actionDrag_link = QtWidgets.QAction(MainWindow)
        self.actionDrag_link.setObjectName("actionDrag_link")
        self.actionDouble_rocker = QtWidgets.QAction(MainWindow)
        self.actionDouble_rocker.setObjectName("actionDouble_rocker")
        self.actionParallelogram_linkage = QtWidgets.QAction(MainWindow)
        self.actionParallelogram_linkage.setObjectName("actionParallelogram_linkage")
        self.actionReverse_Parsing_Rocker = QtWidgets.QAction(MainWindow)
        self.actionReverse_Parsing_Rocker.setObjectName("actionReverse_Parsing_Rocker")
        self.actionClose_all_panels = QtWidgets.QAction(MainWindow)
        self.actionClose_all_panels.setIcon(icon21)
        self.actionClose_all_panels.setObjectName("actionClose_all_panels")
        self.actionReplace_Point = QtWidgets.QAction(MainWindow)
        self.actionReplace_Point.setObjectName("actionReplace_Point")
        self.actionBatch_moving = QtWidgets.QAction(MainWindow)
        self.actionBatch_moving.setObjectName("actionBatch_moving")
        self.actionSlider_and_Rod = QtWidgets.QAction(MainWindow)
        self.actionSlider_and_Rod.setObjectName("actionSlider_and_Rod")
        self.actionSolvespace_2D_sketch = QtWidgets.QAction(MainWindow)
        self.actionSolvespace_2D_sketch.setIcon(icon47)
        self.actionSolvespace_2D_sketch.setObjectName("actionSolvespace_2D_sketch")
        self.menuExample.addAction(self.actionCrank_rocker)
        self.menuExample.addAction(self.actionDrag_link)
        self.menuExample.addAction(self.actionDouble_rocker)
        self.menuExample.addAction(self.actionParallelogram_linkage)
        self.menuExample.addSeparator()
        self.menuExample.addAction(self.actionMutiple_Link)
        self.menuExample.addAction(self.actionTwo_Mutiple_Link)
        self.menuExample.addSeparator()
        self.menuExample.addAction(self.actionReverse_Parsing_Rocker)
        self.menuExample.addSeparator()
        self.menuExample.addAction(self.actionSlider_and_Rod)
        self.menuExport.addAction(self.action_Output_to_Solvespace)
        self.menuExport.addAction(self.actionSolvespace_2D_sketch)
        self.menuExport.addSeparator()
        self.menuExport.addAction(self.action_Output_to_Picture)
        self.menuExport.addAction(self.action_Output_to_Script)
        self.menuExport.addAction(self.actionOutput_to_DXF)
        self.menuExport.addAction(self.action_Output_to_S_QLite_Data_Base)
        self.menuFile.addAction(self.action_New_Workbook)
        self.menuFile.addAction(self.action_Load_Workbook)
        self.menuFile.addAction(self.menuExample.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionSave_as)
        self.menuFile.addAction(self.menuExport.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionMi_nimized)
        self.menuFile.addAction(self.actionM_axmized)
        self.menuFile.addAction(self.actionNormalmized)
        self.menuFile.addAction(self.action_Full_Screen)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionE_xit)
        self.menu_Draw.addAction(self.action_New_Point)
        self.menu_Draw.addAction(self.action_New_Line)
        self.menu_Draw.addAction(self.action_New_Stay_Chain)
        self.menu_Draw.addSeparator()
        self.menu_Draw.addAction(self.actionEdit_Point)
        self.menu_Draw.addAction(self.actionEdit_Linkage)
        self.menu_Draw.addAction(self.actionEdit_Stay_Chain)
        self.menu_Draw.addSeparator()
        self.menu_Draw.addAction(self.actionDelete_Point)
        self.menu_Draw.addAction(self.actionDelete_Linkage)
        self.menu_Draw.addAction(self.actionDelete_Stay_Chain)
        self.menu_Options.addAction(self.actionDisplay_Dimensions)
        self.menu_Options.addAction(self.actionDisplay_Point_Mark)
        self.menu_Options.addAction(self.action_Black_Blackground)
        self.menu_Options.addAction(self.actionClose_all_panels)
        self.menu_Options.addSeparator()
        self.menu_Options.addAction(self.action_See_Python_Scripts)
        self.menu_Options.addAction(self.action_Property)
        self.menu_Options.addSeparator()
        self.menu_Options.addAction(self.action_Prefenece)
        self.menu_Help.addAction(self.actionHow_to_use)
        self.menu_Help.addSeparator()
        self.menu_Help.addAction(self.action_Get_Help)
        self.menu_Help.addAction(self.actionGit_hub_Site)
        self.menu_Help.addAction(self.actionGithub_Wiki)
        self.menu_Help.addSeparator()
        self.menu_Help.addAction(self.action_About_Pyslvs)
        self.menu_Help.addAction(self.action_About_Python_Solvspace)
        self.menu_Simulation.addAction(self.action_Set_Shaft)
        self.menu_Simulation.addAction(self.action_Set_Slider)
        self.menu_Simulation.addAction(self.action_Set_Rod)
        self.menu_Simulation.addSeparator()
        self.menu_Simulation.addAction(self.action_Edit_Shaft)
        self.menu_Simulation.addAction(self.action_Edit_Slider)
        self.menu_Simulation.addAction(self.action_Edit_Rod)
        self.menu_Simulation.addSeparator()
        self.menu_Simulation.addAction(self.actionDelete_Shaft)
        self.menu_Simulation.addAction(self.actionDelete_Slider)
        self.menu_Simulation.addAction(self.actionDelete_Piston_Spring)
        self.menu_Edit.addAction(self.actionUndo)
        self.menu_Edit.addAction(self.actionRedo)
        self.menu_Edit.addSeparator()
        self.menu_Edit.addAction(self.actionSearch_Points)
        self.menu_Edit.addAction(self.actionReplace_Point)
        self.menu_Edit.addAction(self.actionBatch_moving)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menu_Edit.menuAction())
        self.menuBar.addAction(self.menu_Draw.menuAction())
        self.menuBar.addAction(self.menu_Simulation.menuAction())
        self.menuBar.addAction(self.menu_Options.menuAction())
        self.menuBar.addAction(self.menu_Help.menuAction())

        self.retranslateUi(MainWindow)
        self.PointTab.setCurrentIndex(0)
        self.Tab.setCurrentIndex(0)
        self.Simulate_tab.setCurrentIndex(0)
        self.actionM_axmized.triggered.connect(MainWindow.showMaximized)
        self.actionMi_nimized.triggered.connect(MainWindow.showMinimized)
        self.action_Full_Screen.triggered.connect(MainWindow.showFullScreen)
        self.actionNormalmized.triggered.connect(MainWindow.showNormal)
        self.actionE_xit.triggered.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Pyslvs - [New Workbook]"))
        self.Entiteis_Point.setStatusTip(_translate("MainWindow", "All Points in this workbook."))
        item = self.Entiteis_Point.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Origin"))
        item = self.Entiteis_Point.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Entiteis_Point.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "X"))
        item = self.Entiteis_Point.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Y"))
        item = self.Entiteis_Point.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Fixed"))
        item = self.Entiteis_Point.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Current"))
        __sortingEnabled = self.Entiteis_Point.isSortingEnabled()
        self.Entiteis_Point.setSortingEnabled(False)
        item = self.Entiteis_Point.item(0, 0)
        item.setText(_translate("MainWindow", "Point0"))
        item = self.Entiteis_Point.item(0, 1)
        item.setText(_translate("MainWindow", "0.0"))
        item = self.Entiteis_Point.item(0, 2)
        item.setText(_translate("MainWindow", "0.0"))
        item = self.Entiteis_Point.item(0, 4)
        item.setText(_translate("MainWindow", "(0.0, 0.0)"))
        self.Entiteis_Point.setSortingEnabled(__sortingEnabled)
        self.label.setText(_translate("MainWindow", "x coordinate"))
        self.X_coordinate.setPlaceholderText(_translate("MainWindow", "0.0"))
        self.label_2.setText(_translate("MainWindow", "y coordinate"))
        self.Y_coordinate.setPlaceholderText(_translate("MainWindow", "0.0"))
        self.Point_add_button.setStatusTip(_translate("MainWindow", "Quick insert a joint point."))
        self.Point_add_button.setText(_translate("MainWindow", "Add a Point"))
        self.PointTab.setTabText(self.PointTab.indexOf(self.Coordinate), _translate("MainWindow", "Point Coordinate"))
        self.Entiteis_Point_Style.setStatusTip(_translate("MainWindow", "All points style settings will show here."))
        item = self.Entiteis_Point_Style.verticalHeaderItem(0)
        item.setText(_translate("MainWindow", "Origin"))
        item = self.Entiteis_Point_Style.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Entiteis_Point_Style.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Center"))
        item = self.Entiteis_Point_Style.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Ring Size"))
        item = self.Entiteis_Point_Style.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Color"))
        __sortingEnabled = self.Entiteis_Point_Style.isSortingEnabled()
        self.Entiteis_Point_Style.setSortingEnabled(False)
        item = self.Entiteis_Point_Style.item(0, 0)
        item.setText(_translate("MainWindow", "Point0"))
        item = self.Entiteis_Point_Style.item(0, 1)
        item.setText(_translate("MainWindow", "Red"))
        item = self.Entiteis_Point_Style.item(0, 2)
        item.setText(_translate("MainWindow", "10"))
        item = self.Entiteis_Point_Style.item(0, 3)
        item.setText(_translate("MainWindow", "Red"))
        self.Entiteis_Point_Style.setSortingEnabled(__sortingEnabled)
        self.label_4.setText(_translate("MainWindow", "Line Width"))
        self.label_7.setText(_translate("MainWindow", "Font size"))
        self.label_5.setText(_translate("MainWindow", "Path Width"))
        self.PointTab.setTabText(self.PointTab.indexOf(self.Style), _translate("MainWindow", "Point Style"))
        self.Parameter_list.setStatusTip(_translate("MainWindow", "List of Parameter."))
        item = self.Parameter_list.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Parameter_list.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Parameter"))
        item = self.Parameter_list.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Comment"))
        self.Parameter_num.setStatusTip(_translate("MainWindow", "Parameter number."))
        self.Parameter_num.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Sans Serif\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">N/A</p></body></html>"))
        self.Parameter_lable.setText(_translate("MainWindow", "Parameter"))
        self.Parameter_digital.setStatusTip(_translate("MainWindow", "Enter your parameter."))
        self.Parameter_digital.setPlaceholderText(_translate("MainWindow", "0.0"))
        self.Parameter_update.setStatusTip(_translate("MainWindow", "Update the data to Parameter List."))
        self.Parameter_update.setText(_translate("MainWindow", "Update"))
        self.Parameter_add.setText(_translate("MainWindow", "Add a Parameter"))
        self.PointTab.setTabText(self.PointTab.indexOf(self.tab), _translate("MainWindow", "Parameter"))
        self.Entiteis_Link_Widget.setStatusTip(_translate("MainWindow", "All Links in this workbook. Needs two point."))
        self.reqLine.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Requirement: 2 Points.</span></p></body></html>"))
        item = self.Entiteis_Link.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Entiteis_Link.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Start Side"))
        item = self.Entiteis_Link.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "End Side"))
        item = self.Entiteis_Link.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Length"))
        self.Entiteis_Stay_Chain_Widget.setStatusTip(_translate("MainWindow", "All Stay Chains in this workbook. Needs three point."))
        self.reqChain.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Requirement: 3 Points.</span></p></body></html>"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Point[1]"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Point[2]"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Point[3]"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "[1]-[2]"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "[2]-[3]"))
        item = self.Entiteis_Stay_Chain.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "[1]-[3]"))
        self.Tab.setTabText(self.Tab.indexOf(self.Entites), _translate("MainWindow", "Entites"))
        self.Shaft_Widget.setStatusTip(_translate("MainWindow", "All drive shaft will show here. Needs two point."))
        self.label_6.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Only Shaft0 is active.</span><br/>Using right click menu to change the priority.</p></body></html>"))
        self.reqShaft.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Requirement: 2 Points.</span></p></body></html>"))
        item = self.Shaft.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Shaft.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Shaft Center"))
        item = self.Shaft.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "References"))
        item = self.Shaft.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Start Angle(deg)"))
        item = self.Shaft.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "End Angle(deg)"))
        item = self.Shaft.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Demo Angle(deg)"))
        item = self.Shaft.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Parallelogram?"))
        self.Simulate_tab.setTabText(self.Simulate_tab.indexOf(self.Shaft_tab), _translate("MainWindow", "Shaft"))
        self.Slider_Widget.setStatusTip(_translate("MainWindow", "All slider will show here. Needs a point and a link."))
        self.reqSlider.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Requirement: 3 Points.</span></p></body></html>"))
        item = self.Slider.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Slider.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Slider Center"))
        item = self.Slider.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Start Side"))
        item = self.Slider.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "End Side"))
        self.Simulate_tab.setTabText(self.Simulate_tab.indexOf(self.Slider_tab), _translate("MainWindow", "Slider"))
        self.Rod_Widget.setStatusTip(_translate("MainWindow", "All extendable rod will show here. Needs two point."))
        self.reqRod.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Requirement: 3 Points.</span></p></body></html>"))
        item = self.Rod.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.Rod.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Point[0]"))
        item = self.Rod.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Start side"))
        item = self.Rod.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "End side"))
        item = self.Rod.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Position"))
        self.Simulate_tab.setTabText(self.Simulate_tab.indexOf(self.Extendable_rod_tab), _translate("MainWindow", "Piston"))
        self.Tab.setTabText(self.Tab.indexOf(self.Simulate), _translate("MainWindow", "Simulate"))
        self.label_8.setText(_translate("MainWindow", "<html><head/><body><p>All changes in this file will show here.</p><p>You can backtracking commands by clicking them below.</p></body></html>"))
        self.Tab.setTabText(self.Tab.indexOf(self.History), _translate("MainWindow", "History"))
        self.reqPath.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">Requirement: 1 Shaft.</span></p></body></html>"))
        self.Path_data_show.setStatusTip(_translate("MainWindow", "Show Path Data."))
        self.Path_data_show.setText(_translate("MainWindow", "Show Path Data"))
        self.Path_Clear.setStatusTip(_translate("MainWindow", "Clear the path form path track function."))
        self.Path_Clear.setText(_translate("MainWindow", "Clear Path"))
        self.Path_coordinate.setStatusTip(_translate("MainWindow", "See the coordinates of Path Track result."))
        self.Path_coordinate.setText(_translate("MainWindow", "View path coordinate"))
        self.Path_data_exist.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#000000;\">No Path Data</span></p></body></html>"))
        self.PathTrack.setStatusTip(_translate("MainWindow", "Route calculation from the specified point."))
        self.PathTrack.setText(_translate("MainWindow", "Path Track"))
        self.reqPathSolving.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" color:#ff0000;\">No specified point.</span></p></body></html>"))
        self.PathSolving.setStatusTip(_translate("MainWindow", "This generator will design a crank rocker to meet this path requirement."))
        self.PathSolving.setText(_translate("MainWindow", "Path Solving"))
        self.Path_points_show.setStatusTip(_translate("MainWindow", "Show design path."))
        self.Path_points_show.setText(_translate("MainWindow", "Show Path Points"))
        self.Drive_shaft.setStatusTip(_translate("MainWindow", "Drive the selected drive shaft."))
        self.Drive_shaft.setText(_translate("MainWindow", "Drive Shaft"))
        self.Drive_rod.setText(_translate("MainWindow", "Drive Piston"))
        self.AuxLine.setStatusTip(_translate("MainWindow", "See the limitation of the point."))
        self.AuxLine.setText(_translate("MainWindow", "Auxiliary Line"))
        self.Measurement.setStatusTip(_translate("MainWindow", "Measure the distance between two points."))
        self.Measurement.setText(_translate("MainWindow", "Measurement"))
        self.Tab.setTabText(self.Tab.indexOf(self.Panels), _translate("MainWindow", "Panels"))
        self.label_3.setText(_translate("MainWindow", "Zoom Size"))
        self.ZoomBar.setStatusTip(_translate("MainWindow", "Adjust the slider to change demo size."))
        self.ZoomText.setText(_translate("MainWindow", "200%"))
        self.ResetCanvas.setStatusTip(_translate("MainWindow", "Focus to Origin."))
        self.ResetCanvas.setText(_translate("MainWindow", "Origin"))
        self.FitW.setStatusTip(_translate("MainWindow", "Fit by width."))
        self.FitW.setText(_translate("MainWindow", "Width"))
        self.FitH.setStatusTip(_translate("MainWindow", "Fit by height."))
        self.FitH.setText(_translate("MainWindow", "Height"))
        self.DOFLable.setText(_translate("MainWindow", "DOF:"))
        self.menuFile.setTitle(_translate("MainWindow", "&File"))
        self.menuExample.setStatusTip(_translate("MainWindow", "Some example of the Linkage mechanism."))
        self.menuExample.setTitle(_translate("MainWindow", "&Example"))
        self.menuExport.setStatusTip(_translate("MainWindow", "Export to other format."))
        self.menuExport.setTitle(_translate("MainWindow", "Ex&port to..."))
        self.menu_Draw.setTitle(_translate("MainWindow", "&Draw"))
        self.menu_Options.setTitle(_translate("MainWindow", "&Options"))
        self.menu_Help.setTitle(_translate("MainWindow", "&Help"))
        self.menu_Simulation.setTitle(_translate("MainWindow", "&Simulation"))
        self.menu_Edit.setTitle(_translate("MainWindow", "&Edit"))
        self.action_New_Workbook.setText(_translate("MainWindow", "&New Workbook"))
        self.action_New_Workbook.setStatusTip(_translate("MainWindow", "Reset to a new wrokbook."))
        self.action_New_Workbook.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.action_Load_Workbook.setText(_translate("MainWindow", "&Load Workbook (*.csv)"))
        self.action_Load_Workbook.setStatusTip(_translate("MainWindow", "Load workbook by exist file."))
        self.action_Load_Workbook.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_New_Point.setText(_translate("MainWindow", "New &Point"))
        self.action_New_Point.setStatusTip(_translate("MainWindow", "Add a new point representative of a node on a machine."))
        self.action_New_Point.setShortcut(_translate("MainWindow", "F2"))
        self.action_New_Line.setText(_translate("MainWindow", "New &Linkage"))
        self.action_New_Line.setStatusTip(_translate("MainWindow", "Add  a link between two points."))
        self.action_New_Line.setShortcut(_translate("MainWindow", "F3"))
        self.action_Output_to_Script.setText(_translate("MainWindow", "Python &Script"))
        self.action_Output_to_Script.setStatusTip(_translate("MainWindow", "Output to a Python 3 slvs module script."))
        self.actionE_xit.setText(_translate("MainWindow", "&Quit"))
        self.actionE_xit.setStatusTip(_translate("MainWindow", "Exit Pyslvs."))
        self.actionE_xit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.action_Get_Help.setText(_translate("MainWindow", "&Get Help on Kmolab"))
        self.action_Get_Help.setStatusTip(_translate("MainWindow", "Goto Kmolab learn about more."))
        self.action_Prefenece.setText(_translate("MainWindow", "&Preferences..."))
        self.action_Prefenece.setStatusTip(_translate("MainWindow", "Some options in this program."))
        self.actionGit_hub_Site.setText(_translate("MainWindow", "Git&hub Site"))
        self.actionGit_hub_Site.setStatusTip(_translate("MainWindow", "Goto Github storage of Pyslvs."))
        self.action_About_Pyslvs.setText(_translate("MainWindow", "About &Pyslvs"))
        self.action_About_Pyslvs.setStatusTip(_translate("MainWindow", "Version and introduction of Pyslvs."))
        self.action_About_Pyslvs.setShortcut(_translate("MainWindow", "F1"))
        self.action_Set_Shaft.setText(_translate("MainWindow", "Set &Drive Shaft"))
        self.action_Set_Shaft.setStatusTip(_translate("MainWindow", "Set a point as a Drive Shaft."))
        self.action_Set_Shaft.setShortcut(_translate("MainWindow", "F5"))
        self.actionGithub_Wiki.setText(_translate("MainWindow", "Github &Manual"))
        self.actionGithub_Wiki.setStatusTip(_translate("MainWindow", "See our Wiki on Github."))
        self.actionMi_nimized.setText(_translate("MainWindow", "Minimized"))
        self.actionMi_nimized.setStatusTip(_translate("MainWindow", "Minimized the window."))
        self.actionM_axmized.setText(_translate("MainWindow", "Maxmized"))
        self.actionM_axmized.setStatusTip(_translate("MainWindow", "Maxmized the window."))
        self.action_Full_Screen.setText(_translate("MainWindow", "Full Screen"))
        self.action_Full_Screen.setStatusTip(_translate("MainWindow", "Let the window truns to full screen."))
        self.action_Full_Screen.setShortcut(_translate("MainWindow", "F11"))
        self.actionNormalmized.setText(_translate("MainWindow", "Normal"))
        self.actionNormalmized.setStatusTip(_translate("MainWindow", "Let the window back to normal."))
        self.actionNormalmized.setShortcut(_translate("MainWindow", "F12"))
        self.action_Output_to_Picture.setText(_translate("MainWindow", "&Picture"))
        self.action_Output_to_Picture.setStatusTip(_translate("MainWindow", "Output to Image format."))
        self.action_Output_to_Picture.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.actionSave.setText(_translate("MainWindow", "&Save"))
        self.actionSave.setToolTip(_translate("MainWindow", "Save"))
        self.actionSave.setStatusTip(_translate("MainWindow", "Save"))
        self.actionSave.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_New_Stay_Chain.setText(_translate("MainWindow", "New Stay &Chain"))
        self.action_New_Stay_Chain.setStatusTip(_translate("MainWindow", "Add a stay chain by existing points."))
        self.action_New_Stay_Chain.setShortcut(_translate("MainWindow", "F4"))
        self.action_See_Python_Scripts.setText(_translate("MainWindow", "Workbook Python &Script"))
        self.action_See_Python_Scripts.setStatusTip(_translate("MainWindow", "See Python scripts in this status."))
        self.action_About_Python_Solvspace.setText(_translate("MainWindow", "About Python &Solvspace"))
        self.actionDelete_Point.setText(_translate("MainWindow", "Delet a Point"))
        self.actionDelete_Point.setStatusTip(_translate("MainWindow", "Delete an Existing point."))
        self.actionDelete_Linkage.setText(_translate("MainWindow", "Delet a Linkage"))
        self.actionDelete_Linkage.setStatusTip(_translate("MainWindow", "Delete an Existing linkage."))
        self.actionDelete_Stay_Chain.setText(_translate("MainWindow", "Delete a Stay Chain"))
        self.actionDelete_Stay_Chain.setStatusTip(_translate("MainWindow", "Delete an Existing stay chain."))
        self.actionEdit_Point.setText(_translate("MainWindow", "Edit a Point"))
        self.actionEdit_Point.setStatusTip(_translate("MainWindow", "Edit an Existing point."))
        self.actionEdit_Linkage.setText(_translate("MainWindow", "Edit a Linkage"))
        self.actionEdit_Linkage.setStatusTip(_translate("MainWindow", "Edit an Existing linkage."))
        self.actionEdit_Stay_Chain.setText(_translate("MainWindow", "Edit a Stay Chain"))
        self.actionEdit_Stay_Chain.setStatusTip(_translate("MainWindow", "Edit an Existing stay chain."))
        self.actionHow_to_use.setText(_translate("MainWindow", "How to use?"))
        self.actionHow_to_use.setStatusTip(_translate("MainWindow", "See concept about Pyslvs."))
        self.action_Set_Slider.setText(_translate("MainWindow", "Set &Slider"))
        self.action_Set_Slider.setStatusTip(_translate("MainWindow", "Set a point as a Slider center."))
        self.action_Set_Slider.setShortcut(_translate("MainWindow", "F6"))
        self.action_Edit_Shaft.setText(_translate("MainWindow", "Edit Drive Shaft"))
        self.action_Edit_Slider.setText(_translate("MainWindow", "Edit Slider"))
        self.actionDelete_Shaft.setText(_translate("MainWindow", "Delete Drive Shaft"))
        self.actionDelete_Slider.setText(_translate("MainWindow", "Delete Slider"))
        self.action_Output_to_S_QLite_Data_Base.setText(_translate("MainWindow", "S&QLite Data Base"))
        self.action_Output_to_S_QLite_Data_Base.setStatusTip(_translate("MainWindow", "Output to SQLite Data Base."))
        self.action_Set_Rod.setText(_translate("MainWindow", "Set &Piston"))
        self.action_Set_Rod.setStatusTip(_translate("MainWindow", "Add  a extendable rod between two points."))
        self.action_Set_Rod.setShortcut(_translate("MainWindow", "F7"))
        self.action_Edit_Rod.setText(_translate("MainWindow", "Edit Piston"))
        self.actionDelete_Piston_Spring.setText(_translate("MainWindow", "Delete Piston"))
        self.actionDisplay_Dimensions.setText(_translate("MainWindow", "Display &Dimensions"))
        self.actionDisplay_Dimensions.setStatusTip(_translate("MainWindow", "Display dimensions in the canvas."))
        self.actionDisplay_Dimensions.setShortcut(_translate("MainWindow", "F10"))
        self.action_Black_Blackground.setText(_translate("MainWindow", "&Black background"))
        self.action_Black_Blackground.setStatusTip(_translate("MainWindow", "Use black background."))
        self.actionDisplay_Point_Mark.setText(_translate("MainWindow", "Display Point &mark"))
        self.actionDisplay_Point_Mark.setStatusTip(_translate("MainWindow", "Display point mark in canvas."))
        self.action_Output_to_Solvespace.setText(_translate("MainWindow", "Solvespace &3D models"))
        self.action_Output_to_Solvespace.setToolTip(_translate("MainWindow", "Solvespace 3D models"))
        self.action_Output_to_Solvespace.setStatusTip(_translate("MainWindow", "Output to Solvespace 3D models"))
        self.action_Output_to_Solvespace.setShortcut(_translate("MainWindow", "Ctrl+3"))
        self.actionOutput_to_DXF.setText(_translate("MainWindow", "&DXF"))
        self.actionOutput_to_DXF.setStatusTip(_translate("MainWindow", "Output to Drawing Exchange format."))
        self.actionOutput_to_DXF.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.action_Property.setText(_translate("MainWindow", "Workbook &Property"))
        self.action_Property.setStatusTip(_translate("MainWindow", "Property of this workbook."))
        self.actionCrank_rocker.setText(_translate("MainWindow", "Crank rocker"))
        self.actionCrank_rocker.setStatusTip(_translate("MainWindow", "Grashof chain #1"))
        self.actionMutiple_Link.setText(_translate("MainWindow", "Mutiple Link"))
        self.actionMutiple_Link.setStatusTip(_translate("MainWindow", "Mutiple Link #1"))
        self.actionSave_as.setText(_translate("MainWindow", "Save &as..."))
        self.actionSave_as.setStatusTip(_translate("MainWindow", "Save as..."))
        self.actionSave_as.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionUndo.setText(_translate("MainWindow", "&Undo"))
        self.actionUndo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedo.setText(_translate("MainWindow", "&Redo"))
        self.actionRedo.setShortcut(_translate("MainWindow", "Ctrl+Shift+Z"))
        self.actionSearch_Points.setText(_translate("MainWindow", "Search Points"))
        self.actionSearch_Points.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionTwo_Mutiple_Link.setText(_translate("MainWindow", "Two Pairs Mutiple Link"))
        self.actionTwo_Mutiple_Link.setStatusTip(_translate("MainWindow", "Mutiple Link #2"))
        self.actionDrag_link.setText(_translate("MainWindow", "Drag-link"))
        self.actionDrag_link.setStatusTip(_translate("MainWindow", "Grashof chain #2"))
        self.actionDouble_rocker.setText(_translate("MainWindow", "Double rocker"))
        self.actionDouble_rocker.setStatusTip(_translate("MainWindow", "Grashof chain #3"))
        self.actionParallelogram_linkage.setText(_translate("MainWindow", "Parallelogram linkage"))
        self.actionParallelogram_linkage.setStatusTip(_translate("MainWindow", "Grashof chain #4"))
        self.actionReverse_Parsing_Rocker.setText(_translate("MainWindow", "Reverse Parsing Rocker"))
        self.actionReverse_Parsing_Rocker.setStatusTip(_translate("MainWindow", "Crank rocker #1"))
        self.actionClose_all_panels.setText(_translate("MainWindow", "&Close all panels"))
        self.actionReplace_Point.setText(_translate("MainWindow", "Replace Point"))
        self.actionReplace_Point.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionBatch_moving.setText(_translate("MainWindow", "Batch moving"))
        self.actionBatch_moving.setShortcut(_translate("MainWindow", "Ctrl+B"))
        self.actionSlider_and_Rod.setText(_translate("MainWindow", "Slider and Rod"))
        self.actionSlider_and_Rod.setStatusTip(_translate("MainWindow", "Rod #1"))
        self.actionSolvespace_2D_sketch.setText(_translate("MainWindow", "Solvespace &2D sketch"))
        self.actionSolvespace_2D_sketch.setStatusTip(_translate("MainWindow", "Output to Solvespace 2D sketch."))
        self.actionSolvespace_2D_sketch.setShortcut(_translate("MainWindow", "Ctrl+2"))

import icons_rc

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())

